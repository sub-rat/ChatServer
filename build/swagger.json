{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ValidateErrorJSON": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AppCreateParams": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IJWToken": {
				"properties": {
					"token": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"token",
					"firstName",
					"lastName",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ILoginData": {
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRegisterData": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"middleName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"middleName",
					"lastName",
					"email",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserCreateParams": {
				"properties": {
					"appId": {
						"type": "string"
					},
					"appUserId": {
						"type": "number",
						"format": "double"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"appId",
					"appUserId",
					"firstName",
					"lastName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RoomCreateParams": {
				"properties": {
					"room": {
						"type": "string"
					},
					"appId": {
						"type": "string"
					},
					"users": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					}
				},
				"required": [
					"room"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"in": "header",
				"name": "Authorization"
			}
		}
	},
	"info": {
		"title": "ts-livechat-2",
		"version": "1.0.0",
		"description": "Live Chat based on ts-node",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Ross Bulat"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/app": {
			"post": {
				"operationId": "CreateApp",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"app"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"user"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AppCreateParams"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetApp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"app"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"user"
						]
					}
				],
				"parameters": []
			}
		},
		"/app/{appId}": {
			"delete": {
				"operationId": "DeleteApp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"app"
				],
				"security": [
					{
						"jwt": [
							"admin",
							"user"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IJWToken"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"401": {
						"description": "Unathorized"
					}
				},
				"description": "Login user",
				"summary": "Login user",
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILoginData"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"201": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/IJWToken"
										},
										{
											"properties": {},
											"type": "object"
										}
									],
									"nullable": true
								}
							}
						}
					}
				},
				"description": "Register user",
				"summary": "Register user",
				"tags": [
					"auth"
				],
				"security": [
					{
						"jwt": [
							"admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRegisterData"
							}
						}
					}
				}
			}
		},
		"/auth/verify": {
			"get": {
				"operationId": "VerifyUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Saved user",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreateParams"
							}
						}
					}
				}
			}
		},
		"/user/{appId}": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/{id}": {
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"user"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/room": {
			"post": {
				"operationId": "CreateRoom",
				"responses": {
					"200": {
						"description": "Saved user",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"room"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoomCreateParams"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetRooms",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"room"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/room/{room}": {
			"get": {
				"operationId": "GetRoomsByName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"room"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "room",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/room/add": {
			"put": {
				"operationId": "AddUser",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"room"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoomCreateParams"
							}
						}
					}
				}
			}
		},
		"/room/remove": {
			"put": {
				"operationId": "RemoveUser",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								}
							}
						}
					}
				},
				"tags": [
					"room"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoomCreateParams"
							}
						}
					}
				}
			}
		},
		"/room/{id}": {
			"delete": {
				"operationId": "DeleteRoom",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"room"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "appId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}